{"version":3,"sources":["../../../src/addons/__tests__/fluxMixin-test.js"],"names":[],"mappings":"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","file":"src/addons/__tests__/fluxMixin-test.js","sourcesContent":["import fluxMixin from '../fluxMixin';\nimport { Flummox, Store, Actions } from '../../Flux';\nimport addContext from './addContext';\nimport sinon from 'sinon';\n\nimport React from 'react/addons';\nconst { PropTypes } = React;\nconst { TestUtils } = React.addons;\n\ndescribe('fluxMixin', () => {\n\n  class TestActions extends Actions {\n    getSomething(something) {\n      return something;\n    }\n  }\n\n  class TestStore extends Store {\n    constructor(flux) {\n      super();\n\n      const testActions = flux.getActions('test');\n      this.register(testActions.getSomething, this.handleGetSomething);\n\n      this.state = {\n        something: null\n      };\n    }\n\n    handleGetSomething(something) {\n      this.setState({ something });\n    }\n  }\n\n  class Flux extends Flummox {\n    constructor() {\n      super();\n\n      this.createActions('test', TestActions);\n      this.createStore('test', TestStore, this);\n      this.createStore('test2', TestStore, this);\n    }\n  }\n\n  const ComponentWithFluxMixin = React.createClass({\n    mixins: [fluxMixin()],\n\n    render() {\n      return null;\n    }\n  });\n\n  it('gets flux from either props or context', () => {\n    const flux = new Flux();\n    let contextComponent, propsComponent;\n\n    const ContextComponent = addContext(\n      ComponentWithFluxMixin,\n      { flux },\n      { flux: React.PropTypes.instanceOf(Flummox) }\n    );\n\n    const tree = TestUtils.renderIntoDocument(\n      <ContextComponent />\n    );\n\n    contextComponent = TestUtils.findRenderedComponentWithType(\n      tree, ComponentWithFluxMixin\n    );\n\n    propsComponent = TestUtils.renderIntoDocument(\n      <ComponentWithFluxMixin flux={flux} />\n    );\n\n    expect(contextComponent.flux).to.be.an.instanceof(Flummox);\n    expect(propsComponent.flux).to.be.an.instanceof(Flummox);\n  });\n\n  it('exposes flux as context', () => {\n    const flux = new Flux();\n\n    const ChildComponent = React.createClass({\n      contextTypes: {\n        flux: PropTypes.instanceOf(Flummox),\n      },\n\n      render() {\n        return <div />;\n      }\n    });\n\n    const Component = React.createClass({\n      mixins: [fluxMixin()],\n\n      render() {\n        return (\n          <div>\n            <ChildComponent key=\"test\" />\n          </div>\n        );\n      }\n    });\n\n    const tree = TestUtils.renderIntoDocument(<Component flux={flux} />);\n\n    const childComponent = TestUtils.findRenderedComponentWithType(\n      tree,\n      ChildComponent\n    );\n\n    expect(childComponent.context.flux).to.equal(flux);\n  });\n\n  it('throws error if neither props or context is set', () => {\n    const flux = new Flux();\n\n    expect(TestUtils.renderIntoDocument.bind(null, <ComponentWithFluxMixin />))\n      .to.throw(\n        'fluxMixin: Could not find Flux instance. Ensure that your component '\n      + 'has either `this.context.flux` or `this.props.flux`.'\n      );\n  });\n\n  it('ignores change event after unmounted', () => {\n    const flux = new Flux();\n    flux.getActions('test').getSomething('foo');\n\n    const getterMap = {\n      test: store => ({ something: store.state.something })\n    };\n    const Component = React.createClass({\n      mixins: [fluxMixin(getterMap)],\n\n      render() {\n        return null;\n      }\n    });\n\n    const container = document.createElement('div');\n    const component = React.render(<Component flux={flux} />, container);\n    const listener = flux.getStore('test').listeners('change')[0];\n\n    React.unmountComponentAtNode(container);\n\n    flux.getActions('test').getSomething('bar');\n    listener();\n\n    expect(component.state.something).to.equal('foo');\n  });\n\n  it('uses #connectToStores() to get initial state', () => {\n    const flux = new Flux();\n\n    flux.getActions('test').getSomething('foobar');\n\n    const getterMap = {\n      test: store => ({\n        something: store.state.something,\n        custom: true,\n      }),\n    };\n\n    const mixin = fluxMixin(getterMap);\n\n    const connectToStores = sinon.spy(mixin, 'connectToStores');\n\n    const Component = React.createClass({\n      mixins: [mixin],\n\n      getInitialState() {\n        return {\n          foobar: 'baz',\n        };\n      },\n\n      render() {\n        return null;\n      }\n    });\n\n    const component = TestUtils.renderIntoDocument(\n      <Component key=\"test\" flux={flux} />\n    );\n\n    expect(connectToStores.calledOnce).to.be.true;\n    expect(connectToStores.firstCall.args[0]).to.equal(getterMap);\n\n    expect(flux.getStore('test').listeners('change')).to.have.length(1);\n\n    expect(component.state).to.deep.equal({\n      something: 'foobar',\n      custom: true,\n      foobar: 'baz',\n    });\n\n  });\n\n  describe('#connectToStores', () => {\n\n    it('returns initial state', () => {\n      const flux = new Flux();\n\n      const component = TestUtils.renderIntoDocument(\n        <ComponentWithFluxMixin key=\"test\" flux={flux} />\n      );\n\n      const initialState = component.connectToStores('test');\n\n      expect(initialState).to.deep.equal({\n        something: null,\n      });\n    });\n\n    it('merges store state with component state on change', () => {\n      const flux = new Flux();\n\n      const component = TestUtils.renderIntoDocument(\n        <ComponentWithFluxMixin key=\"test\" flux={flux} />\n      );\n\n      component.setState({ otherThing: 'barbaz' });\n\n      component.connectToStores('test');\n      flux.getActions('test').getSomething('foobar');\n\n      expect(component.state).to.deep.equal({\n        something: 'foobar',\n        otherThing: 'barbaz',\n      });\n    });\n\n    it('uses custom state getter, if given', () => {\n      const flux = new Flux();\n\n      const component = TestUtils.renderIntoDocument(\n        <ComponentWithFluxMixin key=\"test\" flux={flux} bar=\"baz\" />\n      );\n\n      component.setState({ otherThing: 'barbaz' });\n\n      component.connectToStores('test', (store, props) => ({\n        something: store.state.something,\n        barbaz: 'bar' + props.bar,\n      }));\n\n      flux.getActions('test').getSomething('foobar');\n\n      expect(component.state).to.deep.equal({\n        something: 'foobar',\n        otherThing: 'barbaz',\n        barbaz: 'barbaz',\n      });\n    });\n\n    it('syncs with store after prop change', () => {\n      const flux = new Flux();\n\n      const Component = React.createClass({\n        mixins: [fluxMixin({\n          test: function(store, props) {\n            return {\n              foo: 'foo is ' + props.foo,\n            };\n          },\n        })],\n\n        render() {\n          return null;\n        }\n      });\n\n      const component = TestUtils.renderIntoDocument(\n        <Component key=\"test\" flux={flux} foo=\"bar\" />\n      );\n\n      expect(component.state.foo).to.equal('foo is bar');\n\n      component.setProps({ foo: 'baz' });\n\n      expect(component.state.foo).to.equal('foo is baz');\n    });\n\n    it('accepts object of keys to state getters', () => {\n      const flux = new Flux();\n\n      const component = TestUtils.renderIntoDocument(\n        <ComponentWithFluxMixin key=\"test\" flux={flux} />\n      );\n\n      component.setState({ otherThing: 'barbaz' });\n\n      component.connectToStores({\n        test: store => ({\n          something: store.state.something,\n          custom: true,\n        }),\n      });\n\n      flux.getActions('test').getSomething('foobar');\n\n      expect(component.state).to.deep.equal({\n        something: 'foobar',\n        otherThing: 'barbaz',\n        custom: true,\n      });\n    });\n\n    it('calls default state getter once with array of stores', () => {\n      const flux = new Flux();\n\n      flux.getStore('test2').setState({ otherThing: 'barbaz' });\n\n      const component = TestUtils.renderIntoDocument(\n        <ComponentWithFluxMixin key=\"test\" flux={flux} />\n      );\n\n      component.connectToStores(['test', 'test2']);\n\n      flux.getActions('test').getSomething('foobar');\n\n      expect(component.state).to.deep.equal({\n        something: 'foobar',\n        otherThing: 'barbaz'\n      });\n    });\n\n    it('calls custom state getter once with array of stores', () => {\n      const flux = new Flux();\n      const testStore = flux.getStore('test');\n      const test2Store = flux.getStore('test2');\n\n      testStore._testId = 'test';\n      test2Store._testId = 'test2';\n\n      const component = TestUtils.renderIntoDocument(\n        <ComponentWithFluxMixin key=\"test\" flux={flux} />\n      );\n\n      const stateGetter = sinon.stub().returns({ foo: 'bar' });\n      const state = component.connectToStores(['test', 'test2'], stateGetter);\n\n      expect(stateGetter.calledOnce).to.be.true;\n      // Use _testId as unique identifier on store.\n      expect(stateGetter.firstCall.args[0][0]._testId).to.equal('test');\n      expect(stateGetter.firstCall.args[0][1]._testId).to.equal('test2');\n\n      expect(state).to.deep.equal({\n        foo: 'bar'\n      });\n    });\n\n    it('uses default getter if null is passed as getter', () => {\n      const flux = new Flux();\n\n      const component = TestUtils.renderIntoDocument(\n        <ComponentWithFluxMixin key=\"test\" flux={flux} />\n      );\n\n      component.setState({ otherThing: 'barbaz' });\n\n      component.connectToStores('test', null);\n\n      flux.getActions('test').getSomething('foobar');\n\n      expect(component.state).to.deep.equal({\n        something: 'foobar',\n        otherThing: 'barbaz',\n      });\n    });\n\n    it('removes listener before unmounting', () => {\n      const flux = new Flux();\n      const div = document.createElement('div');\n\n      const component = React.render(<ComponentWithFluxMixin flux={flux} />, div);\n\n      const store = flux.getStore('test');\n      component.connectToStores('test');\n\n      expect(store.listeners('change').length).to.equal(1);\n      React.unmountComponentAtNode(div);\n      expect(store.listeners('change').length).to.equal(0);\n    });\n\n  });\n\n  describe('#getStoreState', () => {\n    it('gets combined state of connected stores', () => {\n      const flux = new Flux();\n\n      const component = TestUtils.renderIntoDocument(\n        <ComponentWithFluxMixin key=\"test\" flux={flux} />\n      );\n\n      component.connectToStores({\n        test: store => ({\n          foo: 'bar',\n        }),\n        test2: store => ({\n          bar: 'baz'\n        })\n      });\n\n      component.setState({ baz: 'foo' });\n\n      expect(component.getStoreState()).to.deep.equal({\n        foo: 'bar',\n        bar: 'baz'\n      });\n    });\n  });\n\n});\n"]}
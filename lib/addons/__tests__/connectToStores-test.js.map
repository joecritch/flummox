{"version":3,"sources":["../../../src/addons/__tests__/connectToStores-test.js"],"names":[],"mappings":";;;;;;;;;;;;IAAO,eAAe,2BAAM,oBAAoB;;IACzC,UAAU,2BAAM,cAAc;;oBACG,YAAY;;IAA3C,OAAO,SAAP,OAAO;IAAE,KAAK,SAAL,KAAK;IAAE,OAAO,SAAP,OAAO;;IACzB,KAAK,2BAAM,cAAc;;IACxB,SAAS,GAAK,KAAK,CAAnB,SAAS;IACT,SAAS,GAAK,KAAK,CAAC,MAAM,CAA1B,SAAS;;IAEX,WAAW;WAAX,WAAW;0BAAX,WAAW;;;;;;;YAAX,WAAW;;eAAX,WAAW;AACf,gBAAY;aAAA,sBAAC,SAAS,EAAE;AACtB,eAAO,SAAS,CAAC;OAClB;;;;SAHG,WAAW;GAAS,OAAO;;IAM3B,SAAS;AACF,WADP,SAAS,CACD,IAAI,EAAE;0BADd,SAAS;;AAEX,+BAFE,SAAS,6CAEH;;AAER,QAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5C,QAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;;AAEjE,QAAI,CAAC,KAAK,GAAG;AACX,eAAS,EAAE,IAAI;KAChB,CAAC;GACH;;YAVG,SAAS;;eAAT,SAAS;AAYb,sBAAkB;aAAA,4BAAC,SAAS,EAAE;AAC5B,YAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAT,SAAS,EAAE,CAAC,CAAC;OAC9B;;;;SAdG,SAAS;GAAS,KAAK;;IAiBvB,IAAI;AACG,WADP,IAAI,GACM;0BADV,IAAI;;AAEN,+BAFE,IAAI,6CAEE;;AAER,QAAI,CAAC,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AACxC,QAAI,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;GAC3C;;YANG,IAAI;;SAAJ,IAAI;GAAS,OAAO;;AAS1B,QAAQ,CAAC,uBAAuB,EAAE,YAAM;AACtC,IAAE,CAAC,wCAAwC,EAAE,YAAM;AACjD,QAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AACxB,QAAI,gBAAgB,YAAA;QAAE,cAAc,YAAA,CAAC;;QAE/B,aAAa;eAAb,aAAa;8BAAb,aAAa;;;;;;;gBAAb,aAAa;;mBAAb,aAAa;AACjB,cAAM;iBAAA,kBAAG;AACP,mBAAO,gCAAM,CAAC;WACf;;;;aAHG,aAAa;OAAS,KAAK,CAAC,SAAS;;AAM3C,QAAM,kBAAkB,GAAG,eAAe,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;;AAElE,QAAM,gBAAgB,GAAG,UAAU,CACjC,kBAAkB,EAClB,EAAE,IAAI,EAAJ,IAAI,EAAE,EACR,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAC9C,CAAC;;AAEF,QAAM,IAAI,GAAG,SAAS,CAAC,kBAAkB,CACvC,oBAAC,gBAAgB,OAAG,CACrB,CAAC;;AAEF,oBAAgB,GAAG,SAAS,CAAC,6BAA6B,CACxD,IAAI,EAAE,kBAAkB,CACzB,CAAC;;AAEF,kBAAc,GAAG,SAAS,CAAC,kBAAkB,CAC3C,oBAAC,kBAAkB,IAAC,IAAI,EAAE,IAAI,AAAC,GAAG,CACnC,CAAC;;AAEF,UAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,cAAW,CAAC,OAAO,CAAC,CAAC;AAC3D,UAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,cAAW,CAAC,OAAO,CAAC,CAAC;GAC1D,CAAC,CAAC;;AAEH,IAAE,CAAC,qCAAqC,EAAE,YAAM;AAC9C,QAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;;QAElB,aAAa;eAAb,aAAa;8BAAb,aAAa;;;;;;;gBAAb,aAAa;;mBAAb,aAAa;AACjB,cAAM;iBAAA,kBAAG;AACP,mBAAO,gCAAM,CAAC;WACf;;;;aAHG,aAAa;OAAS,KAAK,CAAC,SAAS;;AAM3C,QAAM,kBAAkB,GAAG,eAAe,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;;AAElE,QAAM,IAAI,GAAG,SAAS,CAAC,kBAAkB,CACvC,oBAAC,kBAAkB,IAAC,IAAI,EAAE,IAAI,AAAC,GAAG,CACnC,CAAC;;AAEF,QAAM,SAAS,GAAG,SAAS,CAAC,6BAA6B,CACvD,IAAI,EAAE,aAAa,CACpB,CAAC;;AAEF,QAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC;;AAE1D,UAAM,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;;AAE7C,gBAAY,CAAC,IAAI,CAAC,CAAC;;AAEnB,UAAM,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;AAEjD,gBAAY,CAAC,IAAI,CAAC,CAAC;;AAEnB,UAAM,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;GAClD,CAAC,CAAC;CACJ,CAAC,CAAC","file":"src/addons/__tests__/connectToStores-test.js","sourcesContent":["import connectToStores from '../connectToStores';\nimport addContext from './addContext';\nimport { Actions, Store, Flummox } from '../../Flux';\nimport React from 'react/addons';\nconst { PropTypes } = React;\nconst { TestUtils } = React.addons;\n\nclass TestActions extends Actions {\n  getSomething(something) {\n    return something;\n  }\n}\n\nclass TestStore extends Store {\n  constructor(flux) {\n    super();\n\n    const testActions = flux.getActions('test');\n    this.register(testActions.getSomething, this.handleGetSomething);\n\n    this.state = {\n      something: null\n    };\n  }\n\n  handleGetSomething(something) {\n    this.setState({ something });\n  }\n}\n\nclass Flux extends Flummox {\n  constructor() {\n    super();\n\n    this.createActions('test', TestActions);\n    this.createStore('test', TestStore, this);\n  }\n}\n\ndescribe('connectToStores (HoC)', () => {\n  it('gets Flux from either props or context', () => {\n    const flux = new Flux();\n    let contextComponent, propsComponent;\n\n    class BaseComponent extends React.Component {\n      render() {\n        return <div/>;\n      }\n    }\n\n    const ConnectedComponent = connectToStores(BaseComponent, 'test');\n\n    const ContextComponent = addContext(\n      ConnectedComponent,\n      { flux },\n      { flux: React.PropTypes.instanceOf(Flummox) }\n    );\n\n    const tree = TestUtils.renderIntoDocument(\n      <ContextComponent />\n    );\n\n    contextComponent = TestUtils.findRenderedComponentWithType(\n      tree, ConnectedComponent\n    );\n\n    propsComponent = TestUtils.renderIntoDocument(\n      <ConnectedComponent flux={flux} />\n    );\n\n    expect(contextComponent.flux).to.be.an.instanceof(Flummox);\n    expect(propsComponent.flux).to.be.an.instanceof(Flummox);\n  });\n\n  it('syncs with store after state change', () => {\n    const flux = new Flux();\n\n    class BaseComponent extends React.Component {\n      render() {\n        return <div/>;\n      }\n    }\n\n    const ConnectedComponent = connectToStores(BaseComponent, 'test');\n\n    const tree = TestUtils.renderIntoDocument(\n      <ConnectedComponent flux={flux} />\n    );\n\n    const component = TestUtils.findRenderedComponentWithType(\n      tree, BaseComponent\n    );\n\n    const getSomething = flux.getActions('test').getSomething;\n\n    expect(component.props.something).to.be.null;\n\n    getSomething('do');\n\n    expect(component.props.something).to.equal('do');\n\n    getSomething('re');\n\n    expect(component.props.something).to.equal('re');\n  });\n});\n"]}
{"version":3,"sources":["../../src/addons/reactComponentMethods.js"],"names":[],"mappings":"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","file":"src/addons/reactComponentMethods.js","sourcesContent":["/**\n * React Component methods. These are the primitives used to implement\n * fluxMixin and FluxComponent.\n *\n * Exposes a Flux instance as `this.flux`. This requires that flux be passed as\n * either context or as a prop (prop takes precedence). Children also are given\n * access to flux instance as `context.flux`.\n *\n * It also adds the method `connectToStores()`, which ensures that the component\n * state stays in sync with the specified Flux stores. See the inline docs\n * of `connectToStores` for details.\n */\n\nimport { default as React, PropTypes } from 'react';\nimport { Flux } from '../Flux';\nimport assign from 'object-assign';\n\nconst instanceMethods = {\n\n  getChildContext() {\n    const flux = this.getFlux();\n\n    if (!flux) return {};\n\n    return { flux };\n  },\n\n  getFlux() {\n    return this.props.flux || this.context.flux;\n  },\n\n  initialize() {\n    this._fluxStateGetters = [];\n    this._fluxListeners = {};\n    this.flux = this.getFlux();\n\n    if (!(this.flux instanceof Flux)) {\n      // TODO: print the actual class name here\n      throw new Error(\n        `fluxMixin: Could not find Flux instance. Ensure that your component `\n      + `has either \\`this.context.flux\\` or \\`this.props.flux\\`.`\n      );\n    }\n  },\n\n  componentWillUnmount() {\n    const flux = this.getFlux();\n\n    for (let key in this._fluxListeners) {\n      if (!this._fluxListeners.hasOwnProperty(key)) continue;\n\n      const store = flux.getStore(key);\n      if (typeof store === 'undefined') continue;\n\n      const listener = this._fluxListeners[key];\n\n      store.removeListener('change', listener);\n    }\n  },\n\n  componentWillReceiveProps(nextProps) {\n    this.updateStores(nextProps);\n  },\n\n  updateStores(props = this.props) {\n    const state = this.getStoreState(props);\n    this.setState(state);\n  },\n\n  getStoreState(props = this.props) {\n    return this._fluxStateGetters.reduce(\n      (result, stateGetter) => {\n        const { getter, stores } = stateGetter;\n        const stateFromStores = getter(stores, props);\n        return assign(result, stateFromStores);\n      }, {}\n    );\n  },\n\n   /**\n    * Connect component to stores, get the combined initial state, and\n    * subscribe to future changes. There are three ways to call it. The\n    * simplest is to pass a single store key and, optionally, a state getter.\n    * The state getter is a function that takes the store as a parameter and\n    * returns the state that should be passed to the component's `setState()`.\n    * If no state getter is specified, the default getter is used, which simply\n    * returns the entire store state.\n    *\n    * The second form accepts an array of store keys. With this form, the state\n    * getter is called once with an array of store instances (in the same order\n    * as the store keys). the default getter performance a reduce on the entire\n    * state for each store.\n    *\n    * The last form accepts an object of store keys mapped to state getters. As\n    * a shortcut, you can pass `null` as a state getter to use the default\n    * state getter.\n    *\n    * Returns the combined initial state of all specified stores.\n    *\n    * This way you can write all the initialization and update logic in a single\n    * location, without having to mess with adding/removing listeners.\n    *\n    * @type {string|array|object} stateGetterMap - map of keys to getters\n    * @returns {object} Combined initial state of stores\n    */\n  connectToStores(stateGetterMap = {}, stateGetter = null) {\n    const flux = this.getFlux();\n\n    const getStore = (key) => {\n      const store = flux.getStore(key);\n\n      if (typeof store === 'undefined') {\n        throw new Error(\n          `connectToStores(): Store with key '${key}' does not exist.`\n        );\n      }\n\n      return store;\n    };\n\n    if (typeof stateGetterMap === 'string') {\n      const key = stateGetterMap;\n      const store = getStore(key);\n      const getter = stateGetter || defaultStateGetter;\n\n      this._fluxStateGetters.push({ stores: store, getter });\n      const listener = createStoreListener(this, store, getter);\n\n      store.addListener('change', listener);\n      this._fluxListeners[key] = listener;\n    } else if (Array.isArray(stateGetterMap)) {\n      const stores = stateGetterMap.map(getStore);\n      const getter = stateGetter || defaultReduceStateGetter;\n\n      this._fluxStateGetters.push({ stores, getter });\n      const listener = createStoreListener(this, stores, getter);\n\n      stateGetterMap.forEach((key, index) => {\n        const store = stores[index];\n        store.addListener('change', listener);\n        this._fluxListeners[key] = listener;\n      });\n\n    } else {\n       for (let key in stateGetterMap) {\n        const store = getStore(key);\n        const getter = stateGetterMap[key] || defaultStateGetter;\n\n        this._fluxStateGetters.push({ stores: store, getter });\n        const listener = createStoreListener(this, store, getter);\n\n        store.addListener('change', listener);\n        this._fluxListeners[key] = listener;\n      }\n    }\n\n    return this.getStoreState();\n  }\n\n};\n\nconst staticProperties = {\n  contextTypes: {\n    flux: PropTypes.instanceOf(Flux),\n  },\n\n  childContextTypes: {\n    flux: PropTypes.instanceOf(Flux),\n  },\n\n  propTypes: {\n    connectToStores: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n      PropTypes.object\n    ]),\n    flux: PropTypes.instanceOf(Flux),\n    render: React.PropTypes.func,\n    stateGetter: React.PropTypes.func,\n  },\n};\n\nexport { instanceMethods, staticProperties };\n\nfunction createStoreListener(component, store, storeStateGetter) {\n  return function() {\n    const state = storeStateGetter(store, this.props);\n    this.setState(state);\n  }.bind(component);\n}\n\nfunction defaultStateGetter(store) {\n  return store.getStateAsObject();\n}\n\nfunction defaultReduceStateGetter(stores) {\n  return stores.reduce(\n    (result, store) => assign(result, store.getStateAsObject()),\n    {}\n  );\n}\n"]}
{"version":3,"sources":["../../src/__tests__/Store-test.js"],"names":[],"mappings":";;;;;;;;;;;;oBAAqC,SAAS;;IAArC,KAAK,SAAL,KAAK;IAAE,IAAI,SAAJ,IAAI;IAAE,OAAO,SAAP,OAAO;;IACtB,KAAK,2BAAM,OAAO;;AAEzB,QAAQ,CAAC,OAAO,EAAE,YAAM;MAChB,YAAY;AACL,aADP,YAAY,GACF;4BADV,YAAY;;AAEd,iCAFE,YAAY,6CAEN;AACR,UAAI,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;KAC7B;;cAJG,YAAY;;WAAZ,YAAY;KAAS,KAAK;;AAOhC,MAAM,QAAQ,GAAG,UAAU,CAAC;;AAE5B,UAAQ,CAAC,aAAa,EAAE,YAAM;AAC5B,MAAE,CAAC,iDAAiD,EAAE,YAAM;;;AAC1D,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC5B,WAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;;AAElC,UAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAChC,0BAAA,KAAK,CAAC,SAAS,EAAC,QAAQ,OAAC,mBAAI,QAAQ,CAAC,CAAC;;AAEvC,YAAM,CAAC,OAAO,CAAC,UAAU,MAAA,CAAlB,OAAO,EAAe,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KACpD,CAAC,CAAC;;AAEH,MAAE,CAAC,wBAAwB,EAAE,YAAM;AACjC,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,WAAK,CAAC,GAAG,GAAG,KAAK,CAAC;;AAElB,eAAS,OAAO,GAAG;AACjB,eAAO,IAAI,CAAC,GAAG,CAAC;OACjB;;AAED,WAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;;AAElC,YAAM,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACrD,CAAC,CAAC;;AAEH,MAAE,CAAC,uCAAuC,EAAE,YAAM;;;UAC1C,cAAc;iBAAd,cAAc;gCAAd,cAAc;;;;;;;kBAAd,cAAc;;qBAAd,cAAc;AAClB,gBAAM;mBAAA,kBAAG;AACP,qBAAO,KAAK,CAAC;aACd;;;;eAHG,cAAc;SAAS,OAAO;;AAMpC,UAAM,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;AACrC,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC5B,WAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;;AAExC,UAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAChC,0BAAA,KAAK,CAAC,SAAS,EAAC,OAAO,CAAC,MAAM,CAAC,GAAG,OAAC,mBAAI,QAAQ,CAAC,CAAC;;AAEjD,YAAM,CAAC,OAAO,CAAC,UAAU,MAAA,CAAlB,OAAO,EAAe,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KACpD,CAAC,CAAC;;AAEH,MAAE,CAAC,+BAA+B,EAAE,YAAM;AACxC,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,YAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,SAAM,EAAE,CAAC;KACzD,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,IAAE,CAAC,uBAAuB,EAAE,YAAM;AAChC,QAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAC1B,UAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;GAChC,CAAC,CAAC;;AAEH,UAAQ,CAAC,kBAAkB,EAAE,YAAM;AACjC,MAAE,CAAC,oEAAoE,EAAE;UACjE,KAAK,EAEL,cAAc,EAYd,WAAW,EAQX,IAAI,EACJ,OAAO,EACP,KAAK,EAEL,OAAO,EAOP,KAAK,EACL,OAAO,EACP,OAAO;;;;AAnCP,iBAAK,GAAG,IAAI,KAAK,EAAE;;AAEnB,0BAAc;uBAAd,cAAc;sCAAd,cAAc;;;;;;;wBAAd,cAAc;;2BAAd,cAAc;AACZ,sBAAM;yBAAA,gBAAC,OAAO;wBAAE,QAAQ,gCAAG,IAAI;;;;;8BAC9B,QAAQ;;;;;gCAAQ,KAAK;;;8DAEnB,OAAO,GAAG,UAAU;;;;;;;mBAC5B;;AAEK,sBAAM;yBAAA,gBAAC,OAAO;;;;8DACX,OAAO;;;;;;;mBACf;;;;qBATG,cAAc;eAAS,OAAO;;AAY9B,uBAAW;AACJ,uBADP,WAAW,GACD;sCADV,WAAW;;AAEb,2CAFE,WAAW,6CAEL;AACR,oBAAI,CAAC,aAAa,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAC9C,oBAAI,CAAC,WAAW,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;eAC3C;;wBALG,WAAW;;qBAAX,WAAW;eAAS,IAAI;;AAQxB,gBAAI,GAAG,IAAI,WAAW,EAAE;AACxB,mBAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;AACpC,iBAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;AAEhC,mBAAO,GAAG,KAAK,CAAC,GAAG,EAAE;;AAC3B,iBAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;;;mBAElC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;;;AAC3B,kBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACtC,kBAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;;AAEhD,iBAAK,GAAG,KAAK,CAAC,GAAG,EAAE;AACnB,mBAAO,GAAG,KAAK,CAAC,GAAG,EAAE;AACrB,mBAAO,GAAG,KAAK,CAAC,GAAG,EAAE;;AAC3B,iBAAK,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;;;mBAEvD,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;;;AACjC,kBAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACpC,kBAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAC1D,kBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACtC,kBAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AAC1D,kBAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,SAAM,CAAC;;;mBAE7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ;;;;AAEzD,kBAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACrC,kBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACtC,kBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACtC,kBAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;;;;;;KACnD,CAAC,CAAC;;AAEH,MAAE,CAAC,+BAA+B,EAAE,YAAM;AACxC,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,YAAM,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,SAAM,EAAE,CAAC;KAC9D,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,gBAAgB,EAAE,YAAM;AAC/B,MAAE,CAAC,+DAA6D,EAAE,YAAM;;;AACtE,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC5B,WAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;AAE3B,UAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAChC,kCAAA,KAAK,CAAC,iBAAiB,EAAC,CAAC,OAAC,2BAAI,QAAQ,CAAC,CAAC;;AAExC,YAAM,CAAC,OAAO,CAAC,UAAU,MAAA,CAAlB,OAAO,EAAe,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KACpD,CAAC,CAAC;;AAEH,MAAE,CAAC,yEAAuE,EAAE,YAAM;;;AAChF,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7B,UAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7B,WAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC5B,WAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;;AAE5B,UAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAChC,kCAAA,KAAK,CAAC,iBAAiB,EAAC,CAAC,OAAC,2BAAI,QAAQ,CAAC,CAAC;AACxC,mCAAA,KAAK,CAAC,iBAAiB,EAAC,CAAC,OAAC,4BAAI,QAAQ,CAAC,CAAC;;AAExC,YAAM,CAAC,QAAQ,CAAC,UAAU,MAAA,CAAnB,QAAQ,EAAe,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACpD,YAAM,CAAC,QAAQ,CAAC,UAAU,MAAA,CAAnB,QAAQ,EAAe,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KACrD,CAAC,CAAC;;AAEH,MAAE,CAAC,wBAAwB,EAAE,YAAM;AACjC,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,WAAK,CAAC,GAAG,GAAG,KAAK,CAAC;;AAElB,eAAS,OAAO,GAAG;AACjB,eAAO,IAAI,CAAC,GAAG,CAAC;OACjB;;AAED,WAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;AAE3B,YAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACtD,CAAC,CAAC;;AAEH,MAAE,CAAC,uCAAuC,EAAE,YAAM;;;UAC1C,cAAc;iBAAd,cAAc;gCAAd,cAAc;;;;;;;kBAAd,cAAc;;qBAAd,cAAc;AAClB,gBAAM;mBAAA,kBAAG;AACP,qBAAO,KAAK,CAAC;aACd;;;;eAHG,cAAc;SAAS,OAAO;;AAMpC,UAAM,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;AACrC,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC5B,WAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;AAE3B,UAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAChC,kCAAA,KAAK,CAAC,iBAAiB,EAAC,CAAC,OAAC,2BAAI,QAAQ,CAAC,CAAC;;AAExC,YAAM,CAAC,OAAO,CAAC,UAAU,MAAA,CAAlB,OAAO,EAAe,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KACpD,CAAC,CAAC;;AAEH,MAAE,CAAC,+BAA+B,EAAE,YAAM;AACxC,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,YAAM,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,SAAM,EAAE,CAAC;KAC5D,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,qBAAqB,EAAE,YAAM;AACpC,MAAE,CAAC,kFAAgF,EAAE;UAC7E,KAAK,EAEL,cAAc,EAcd,WAAW,EAQX,IAAI,EACJ,OAAO,EACP,KAAK,EAEL,KAAK,EACL,OAAO,EACP,OAAO;;;;AA9BP,iBAAK,GAAG,IAAI,KAAK,EAAE;;AAEnB,0BAAc;uBAAd,cAAc;sCAAd,cAAc;;;;;;;wBAAd,cAAc;;2BAAd,cAAc;AACZ,sBAAM;yBAAA,gBAAC,OAAO;wBAAE,QAAQ,gCAAG,IAAI;;;;;8BAC9B,QAAQ;;;;;gCAAQ,KAAK;;;8DAEnB,OAAO,GAAG,UAAU;;;;;;;mBAC5B;;AAEK,sBAAM;yBAAA,gBAAC,OAAO;wBAAE,QAAQ,gCAAG,IAAI;;;;;8BAC9B,QAAQ;;;;;gCAAQ,KAAK;;;8DAEnB,OAAO,GAAG,UAAU;;;;;;;mBAC5B;;;;qBAXG,cAAc;eAAS,OAAO;;AAc9B,uBAAW;AACJ,uBADP,WAAW,GACD;sCADV,WAAW;;AAEb,2CAFE,WAAW,6CAEL;AACR,oBAAI,CAAC,aAAa,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAC9C,oBAAI,CAAC,WAAW,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;eAC3C;;wBALG,WAAW;;qBAAX,WAAW;eAAS,IAAI;;AAQxB,gBAAI,GAAG,IAAI,WAAW,EAAE;AACxB,mBAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;AACpC,iBAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;AAEhC,iBAAK,GAAG,KAAK,CAAC,GAAG,EAAE;AACnB,mBAAO,GAAG,KAAK,CAAC,GAAG,EAAE;AACrB,mBAAO,GAAG,KAAK,CAAC,GAAG,EAAE;;AAC3B,iBAAK,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;;;mBAE1C,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;;;AACjC,kBAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACpC,kBAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAC1D,kBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACtC,kBAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AAC1D,kBAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,SAAM,CAAC;;;mBAE7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ;;;AACzD,kBAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACrC,kBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACtC,kBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACtC,kBAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;;mBAE5C,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;;;AACjC,kBAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACtC,kBAAM,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAC1D,kBAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACvC,kBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AAC3D,kBAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,SAAM,CAAC;;;mBAElC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ;;;AACzD,kBAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpC,kBAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACvC,kBAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACvC,kBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;;;;;;KACpD,CAAC,CAAC;;AAEH,MAAE,CAAC,+BAA+B,EAAE,YAAM;AACxC,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,YAAM,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,SAAM,EAAE,CAAC;KAC9D,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,YAAY,EAAE,YAAM;AAC3B,MAAE,CAAC,6CAA6C,EAAE,YAAM;AACtD,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC5B,WAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;;;AAGlC,UAAM,IAAI,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;AAC5B,WAAK,CAAC,OAAO,CAAC,EAAE,IAAI,EAAJ,IAAI,EAAE,QAAQ,EAAR,QAAQ,EAAE,CAAC,CAAC;;AAElC,YAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KAC7C,CAAC,CAAC;;AAEH,MAAE,CAAC,2DAAyD,EAAE,YAAM;AAClE,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC5B,UAAM,SAAS,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;AAC7C,WAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;;AAG3B,UAAM,IAAI,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;AAC5B,WAAK,CAAC,OAAO,CAAC,EAAE,IAAI,EAAJ,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,WAAK,CAAC,OAAO,CAAC,EAAE,IAAI,EAAJ,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;AAEhD,YAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AAC5C,YAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KACxC,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,YAAY,EAAE,YAAM;AAC3B,MAAE,CAAC,wBAAwB,EAAE,YAAM;AACjC,UAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AACxB,UAAM,MAAM,GAAG,EAAE,CAAC;;AAElB,UAAI,MAAM,YAAA,CAAC;;UAEL,MAAM;AACC,iBADP,MAAM,GACI;gCADV,MAAM;;AAER,qCAFE,MAAM,6CAEA;;AAER,cAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAW;AACjC,gBAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrB,kBAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;WAChB,CAAC,CAAC;SACJ;;kBARG,MAAM;;eAAN,MAAM;SAAS,KAAK;;UAWpB,MAAM;AACC,iBADP,MAAM,GACI;gCADV,MAAM;;AAER,qCAFE,MAAM,6CAEA;;AAER,cAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAM;AAC5B,kBAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;WAChB,CAAC,CAAC;SACJ;;kBAPG,MAAM;;eAAN,MAAM;SAAS,KAAK;;AAU1B,UAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACnC,UAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;;AAEnC,YAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;;AAEjC,UAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAElC,YAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACtC,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,gBAAgB,EAAE,YAAM;AAC/B,MAAE,CAAC,oBAAoB,EAAE,YAAM;AAC7B,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7B,WAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAEtC,WAAK,CAAC,WAAW,EAAE,CAAC;;AAEpB,YAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KACxC,CAAC,CAAC;;AAEH,MAAE,CAAC,+BAAgC,EAAE,YAAM;AACzC,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7B,WAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAEtC,WAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAW;AAClC,YAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AAClC,YAAI,CAAC,WAAW,EAAE,CAAC;;AAEnB,cAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AACjD,cAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,SAAM,CAAC;;AAEpC,YAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AAC9B,YAAI,CAAC,WAAW,EAAE,CAAC;AACnB,YAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;OACnC,CAAC,CAAC;;;AAGH,WAAK,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAR,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;;AAE5C,YAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACvC,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;KACnD,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,aAAa,EAAE,YAAM;AAC5B,MAAE,CAAC,yCAAyC,EAAE,YAAM;AAClD,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;;AAEjC,WAAK,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;;AAE/B,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;AAChC,WAAG,EAAE,KAAK;AACV,WAAG,EAAE,KAAK,EACX,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,MAAE,CAAC,gCAAgC,EAAE,YAAM;AACzC,UAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAC1B,WAAK,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACvB,WAAK,CAAC,QAAQ,CAAC,UAAA,KAAK;eAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE;OAAC,CAAC,CAAC;AAC9C,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClC,WAAK,CAAC,QAAQ,CAAC,UAAA,KAAK;eAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE;OAAC,CAAC,CAAC;AAC9C,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClC,WAAK,CAAC,QAAQ,CAAC,UAAA,KAAK;eAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE;OAAC,CAAC,CAAC;AAC9C,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACnC,CAAC,CAAC;;AAEH,MAAE,CAAC,oBAAoB,EAAE,YAAM;AAC7B,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7B,WAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAEtC,WAAK,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;;AAE/B,YAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KACxC,CAAC,CAAC;;AAEH,MAAE,CAAC,sDAAsD,EAAE,YAAM;AAC/D,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7B,WAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAEtC,WAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAW;AAClC,YAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;;AAE9B,cAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AACjD,cAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,SAAM,CAAC;;AAEpC,YAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;OAC/B,CAAC,CAAC;;;AAGH,WAAK,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAR,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;;AAE5C,YAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACvC,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;KAC3E,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,iBAAiB,EAAE,YAAM;AAChC,MAAE,CAAC,mCAAmC,EAAE,YAAM;AAC5C,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;;AAEjC,WAAK,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;;AAEnC,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;AAChC,WAAG,EAAE,KAAK,EACX,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,MAAE,CAAC,sDAAsD,EAAE,YAAM;AAC/D,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7B,WAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAEtC,WAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAW;AAClC,YAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;;AAElC,cAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AACjD,cAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,SAAM,CAAC;;AAEpC,YAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AAC9B,YAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;OACnC,CAAC,CAAC;;;AAGH,WAAK,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAR,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;;AAE5C,YAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACvC,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;KACnD,CAAC,CAAC;;AAEH,MAAE,CAAC,oBAAoB,EAAE,YAAM;AAC7B,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7B,WAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAEtC,WAAK,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;;AAEnC,YAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KACxC,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,cAAc,EAAE,YAAM;AAC7B,MAAE,CAAC,gDAAgD,EAAE,YAAM;UACnD,WAAW;iBAAX,WAAW;gCAAX,WAAW;;;;;;;kBAAX,WAAW;;qBAAX,WAAW;AACR,qBAAW;mBAAA,qBAAC,SAAS,EAAE,SAAS,EAAE;AACvC,qBAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAC1B,MAAM,CAAC,UAAA,KAAK;uBAAI,OAAO,KAAK,KAAK,QAAQ;eAAA,CAAC,CAC1C,IAAI,CAAC,EAAE,CAAC,CAAC;aACb;;;;eALG,WAAW;SAAS,KAAK;;AAQ/B,UAAM,KAAK,GAAG,IAAI,WAAW,EAAE,CAAC;;AAEhC,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AAC/B,WAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpB,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAClC,WAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpB,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACnC,WAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAC1B,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,WAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtB,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;KACxC,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,qBAAqB,EAAE,YAAM;AACpC,MAAE,CAAC,wCAAwC,EAAE,YAAM;AACjD,UAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAC1B,WAAK,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AAC3C,YAAM,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;KAC5E,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,gBAAgB,EAAE,YAAM;AAC/B,MAAE,CAAC,oBAAoB,EAAE,YAAM;AAC7B,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7B,WAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAEtC,WAAK,CAAC,WAAW,EAAE,CAAC;;AAEpB,YAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;KACxC,CAAC,CAAC;;AAEH,MAAE,CAAC,+BAAgC,EAAE,YAAM;AACzC,UAAM,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,UAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AAC7B,WAAK,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAEtC,WAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAW;AAClC,YAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AAClC,YAAI,CAAC,WAAW,EAAE,CAAC;;AAEnB,cAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AACjD,cAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,SAAM,CAAC;;AAEpC,YAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;AAC9B,YAAI,CAAC,WAAW,EAAE,CAAC;AACnB,YAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;OACnC,CAAC,CAAC;;;AAGH,WAAK,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAR,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;;AAE5C,YAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,QAAK,CAAC;AACvC,YAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;KACnD,CAAC,CAAC;GACJ,CAAC,CAAC;CAEJ,CAAC,CAAC","file":"src/__tests__/Store-test.js","sourcesContent":["import { Store, Flux, Actions } from '../Flux';\nimport sinon from 'sinon';\n\ndescribe('Store', () => {\n  class ExampleStore extends Store {\n    constructor() {\n      super();\n      this.state = { foo: 'bar' };\n    }\n  }\n\n  const actionId = 'actionId';\n\n  describe('#register()', () => {\n    it('adds handler to internal collection of handlers', () => {\n      const store = new ExampleStore();\n      const handler = sinon.spy();\n      store.register(actionId, handler);\n\n      const mockArgs = ['foo', 'bar'];\n      store._handlers[actionId](...mockArgs);\n\n      expect(handler.calledWith(...mockArgs)).to.be.true;\n    });\n\n    it('binds handler to store', () => {\n      const store = new ExampleStore();\n      store.foo = 'bar';\n\n      function handler() {\n        return this.foo;\n      }\n\n      store.register(actionId, handler);\n\n      expect(store._handlers[actionId]()).to.equal('bar');\n    });\n\n    it('accepts actions instead of action ids', () => {\n      class ExampleActions extends Actions {\n        getFoo() {\n          return 'foo';\n        }\n      }\n\n      const actions = new ExampleActions();\n      const store = new ExampleStore();\n      const handler = sinon.spy();\n      store.register(actions.getFoo, handler);\n\n      const mockArgs = ['foo', 'bar'];\n      store._handlers[actions.getFoo._id](...mockArgs);\n\n      expect(handler.calledWith(...mockArgs)).to.be.true;\n    });\n\n    it('ignores non-function handlers', () => {\n      const store = new ExampleStore();\n      expect(store.register.bind(store, null)).not.to.throw();\n    });\n\n  });\n\n  it('default state is null', () => {\n    const store = new Store();\n    expect(store.state).to.be.null;\n  });\n\n  describe('#registerAsync()', () => {\n    it('registers handlers for begin, success, and failure of async action', async function() {\n      const error = new Error();\n\n      class ExampleActions extends Actions {\n        async getFoo(message, _success = true) {\n          if (!_success) throw error;\n\n          return message + ' success';\n        }\n\n        async getBar(message) {\n          return message;\n        }\n      }\n\n      class ExampleFlux extends Flux {\n        constructor() {\n          super();\n          this.createActions('example', ExampleActions);\n          this.createStore('example', ExampleStore);\n        }\n      }\n\n      const flux = new ExampleFlux();\n      const actions = flux.getActions('example');\n      const store = flux.getStore('example');\n\n      const handler = sinon.spy();\n      store.register(actions.getBar, handler);\n\n      await actions.getBar('bar');\n      expect(handler.calledOnce).to.be.true;\n      expect(handler.firstCall.args).to.deep.equal(['bar']);\n\n      const begin = sinon.spy();\n      const success = sinon.spy();\n      const failure = sinon.spy();\n      store.registerAsync(actions.getFoo, begin, success, failure);\n\n      await actions.getFoo('foo', true);\n      expect(begin.calledOnce).to.be.true;\n      expect(begin.firstCall.args).to.deep.equal(['foo', true]);\n      expect(success.calledOnce).to.be.true;\n      expect(success.firstCall.args[0]).to.equal('foo success');\n      expect(failure.called).to.be.false;\n\n      await expect(actions.getFoo('bar', false)).to.be.rejected;\n\n      expect(begin.calledTwice).to.be.true;\n      expect(success.calledOnce).to.be.true;\n      expect(failure.calledOnce).to.be.true;\n      expect(failure.firstCall.args[0]).to.equal(error);\n    });\n\n    it('ignores non-function handlers', () => {\n      const store = new ExampleStore();\n      expect(store.registerAsync.bind(store, null)).not.to.throw();\n    });\n  });\n\n  describe('#registerAll()', () => {\n    it('adds handler to internal collection of \"catch all\" handlers', () => {\n      const store = new ExampleStore();\n      const handler = sinon.spy();\n      store.registerAll(handler);\n\n      const mockArgs = ['foo', 'bar'];\n      store._catchAllHandlers[0](...mockArgs);\n\n      expect(handler.calledWith(...mockArgs)).to.be.true;\n    });\n\n    it('adds multiple handlers to internal collection of \"catch all\" handlers', () => {\n      const store = new ExampleStore();\n      const handler1 = sinon.spy();\n      const handler2 = sinon.spy();\n      store.registerAll(handler1);\n      store.registerAll(handler2);\n\n      const mockArgs = ['foo', 'bar'];\n      store._catchAllHandlers[0](...mockArgs);\n      store._catchAllHandlers[1](...mockArgs);\n\n      expect(handler1.calledWith(...mockArgs)).to.be.true;\n      expect(handler2.calledWith(...mockArgs)).to.be.true;\n    });\n\n    it('binds handler to store', () => {\n      const store = new ExampleStore();\n      store.foo = 'bar';\n\n      function handler() {\n        return this.foo;\n      }\n\n      store.registerAll(handler);\n\n      expect(store._catchAllHandlers[0]()).to.equal('bar');\n    });\n\n    it('accepts actions instead of action ids', () => {\n      class ExampleActions extends Actions {\n        getFoo() {\n          return 'foo';\n        }\n      }\n\n      const actions = new ExampleActions();\n      const store = new ExampleStore();\n      const handler = sinon.spy();\n      store.registerAll(handler);\n\n      const mockArgs = ['foo', 'bar'];\n      store._catchAllHandlers[0](...mockArgs);\n\n      expect(handler.calledWith(...mockArgs)).to.be.true;\n    });\n\n    it('ignores non-function handlers', () => {\n      const store = new ExampleStore();\n      expect(store.registerAll.bind(store, null)).not.to.throw();\n    });\n\n  });\n\n  describe('#registerAllAsync()', () => {\n    it('registers \"catch all\" handlers for begin, success, and failure of async action', async function() {\n      const error = new Error();\n\n      class ExampleActions extends Actions {\n        async getFoo(message, _success = true) {\n          if (!_success) throw error;\n\n          return message + ' success';\n        }\n\n        async getBar(message, _success = true) {\n          if (!_success) throw error;\n\n          return message + ' success';\n        }\n      }\n\n      class ExampleFlux extends Flux {\n        constructor() {\n          super();\n          this.createActions('example', ExampleActions);\n          this.createStore('example', ExampleStore);\n        }\n      }\n\n      const flux = new ExampleFlux();\n      const actions = flux.getActions('example');\n      const store = flux.getStore('example');\n\n      const begin = sinon.spy();\n      const success = sinon.spy();\n      const failure = sinon.spy();\n      store.registerAllAsync(begin, success, failure);\n\n      await actions.getFoo('foo', true);\n      expect(begin.calledOnce).to.be.true;\n      expect(begin.firstCall.args).to.deep.equal(['foo', true]);\n      expect(success.calledOnce).to.be.true;\n      expect(success.firstCall.args[0]).to.equal('foo success');\n      expect(failure.called).to.be.false;\n\n      await expect(actions.getFoo('bar', false)).to.be.rejected;\n      expect(begin.calledTwice).to.be.true;\n      expect(success.calledOnce).to.be.true;\n      expect(failure.calledOnce).to.be.true;\n      expect(failure.firstCall.args[0]).to.equal(error);\n\n      await actions.getBar('foo', true);\n      expect(begin.calledThrice).to.be.true;\n      expect(begin.thirdCall.args).to.deep.equal(['foo', true]);\n      expect(success.calledTwice).to.be.true;\n      expect(success.secondCall.args[0]).to.equal('foo success');\n      expect(failure.calledTwice).to.be.false;\n\n      await expect(actions.getBar('bar', false)).to.be.rejected;\n      expect(begin.callCount).to.equal(4);\n      expect(success.calledTwice).to.be.true;\n      expect(failure.calledTwice).to.be.true;\n      expect(failure.secondCall.args[0]).to.equal(error);\n    });\n\n    it('ignores non-function handlers', () => {\n      const store = new ExampleStore();\n      expect(store.registerAsync.bind(store, null)).not.to.throw();\n    });\n  });\n\n  describe('#handler()', () => {\n    it('delegates dispatches to registered handlers', () => {\n      const store = new ExampleStore();\n      const handler = sinon.spy();\n      store.register(actionId, handler);\n\n      // Simulate dispatch\n      const body = { foo: 'bar' };\n      store.handler({ body, actionId });\n\n      expect(handler.calledWith(body)).to.be.true;\n    });\n\n    it('delegates dispatches to registered \"catch all\" handlers', () => {\n      const store = new ExampleStore();\n      const handler = sinon.spy();\n      const actionIds = ['actionId1', 'actionId2'];\n      store.registerAll(handler);\n\n      // Simulate dispatch\n      const body = { foo: 'bar' };\n      store.handler({ body, actionId: actionIds[0] });\n      store.handler({ body, actionId: actionIds[1] });\n\n      expect(handler.calledWith(body)).to.be.true;\n      expect(handler.calledTwice).to.be.true;\n    });\n  });\n\n  describe('#waitFor()', () => {\n    it('waits for other stores', () => {\n      const flux = new Flux();\n      const result = [];\n\n      let store2;\n\n      class Store1 extends Store {\n        constructor() {\n          super();\n\n          this.register(actionId, function() {\n            this.waitFor(store2);\n            result.push(1);\n          });\n        }\n      }\n\n      class Store2 extends Store {\n        constructor() {\n          super();\n\n          this.register(actionId, () => {\n            result.push(2);\n          });\n        }\n      }\n\n      flux.createStore('store1', Store1);\n      flux.createStore('store2', Store2);\n\n      store2 = flux.getStore('store2');\n\n      flux.dispatch(actionId, 'foobar');\n\n      expect(result).to.deep.equal([2, 1]);\n    });\n  });\n\n  describe('#forceUpdate()', () => {\n    it('emits change event', () => {\n      const store = new ExampleStore();\n      const listener = sinon.spy();\n      store.addListener('change', listener);\n\n      store.forceUpdate();\n\n      expect(listener.calledOnce).to.be.true;\n    });\n\n    it('doesn\\'t modify existing state', () => {\n      const store = new ExampleStore();\n      const listener = sinon.spy();\n      store.addListener('change', listener);\n\n      store.register(actionId, function() {\n        this.replaceState({ bar: 'baz' });\n        this.forceUpdate();\n\n        expect(this.state).to.deep.equal({ foo: 'bar' });\n        expect(listener.called).to.be.false;\n\n        this.setState({ foo: 'bar' });\n        this.forceUpdate();\n        this.replaceState({ baz: 'foo' });\n      });\n\n      // Simulate dispatch\n      store.handler({ actionId, body: 'foobar' });\n\n      expect(listener.calledOnce).to.be.true;\n      expect(store.state).to.deep.equal({ baz: 'foo' });\n    });\n  });\n\n  describe('#setState()', () => {\n    it('shallow merges old state with new state', () => {\n      const store = new ExampleStore();\n\n      store.setState({ bar: 'baz' });\n\n      expect(store.state).to.deep.equal({\n        foo: 'bar',\n        bar: 'baz',\n      });\n    });\n\n    it('supports transactional updates', () => {\n      const store = new Store();\n      store.state = { a: 1 };\n      store.setState(state => ({ a: state.a + 1 }));\n      expect(store.state.a).to.equal(2);\n      store.setState(state => ({ a: state.a + 1 }));\n      expect(store.state.a).to.equal(3);\n      store.setState(state => ({ a: state.a + 1 }));\n      expect(store.state.a).to.equal(4);\n    });\n\n    it('emits change event', () => {\n      const store = new ExampleStore();\n      const listener = sinon.spy();\n      store.addListener('change', listener);\n\n      store.setState({ foo: 'bar' });\n\n      expect(listener.calledOnce).to.be.true;\n    });\n\n    it('batches multiple state updates within action handler', () => {\n      const store = new ExampleStore();\n      const listener = sinon.spy();\n      store.addListener('change', listener);\n\n      store.register(actionId, function() {\n        this.setState({ bar: 'baz' });\n\n        expect(this.state).to.deep.equal({ foo: 'bar' });\n        expect(listener.called).to.be.false;\n\n        this.setState({ baz: 'foo' });\n      });\n\n      // Simulate dispatch\n      store.handler({ actionId, body: 'foobar' });\n\n      expect(listener.calledOnce).to.be.true;\n      expect(store.state).to.deep.equal({ foo: 'bar', bar: 'baz', baz: 'foo' });\n    });\n  });\n\n  describe('#replaceState()', () => {\n    it('replaces old state with new state', () => {\n      const store = new ExampleStore();\n\n      store.replaceState({ bar: 'baz' });\n\n      expect(store.state).to.deep.equal({\n        bar: 'baz',\n      });\n    });\n\n    it('batches multiple state updates within action handler', () => {\n      const store = new ExampleStore();\n      const listener = sinon.spy();\n      store.addListener('change', listener);\n\n      store.register(actionId, function() {\n        this.replaceState({ bar: 'baz' });\n\n        expect(this.state).to.deep.equal({ foo: 'bar' });\n        expect(listener.called).to.be.false;\n\n        this.setState({ foo: 'bar' });\n        this.replaceState({ baz: 'foo' });\n      });\n\n      // Simulate dispatch\n      store.handler({ actionId, body: 'foobar' });\n\n      expect(listener.calledOnce).to.be.true;\n      expect(store.state).to.deep.equal({ baz: 'foo' });\n    });\n\n    it('emits change event', () => {\n      const store = new ExampleStore();\n      const listener = sinon.spy();\n      store.addListener('change', listener);\n\n      store.replaceState({ foo: 'bar' });\n\n      expect(listener.calledOnce).to.be.true;\n    });\n  });\n\n  describe('.assignState', () => {\n    it('can be overridden to enable custom state types', () => {\n      class StringStore extends Store {\n        static assignState(prevState, nextState) {\n          return [prevState, nextState]\n            .filter(state => typeof state === 'string')\n            .join('');\n        }\n      }\n\n      const store = new StringStore();\n\n      expect(store.state).to.be.null;\n      store.setState('a');\n      expect(store.state).to.equal('a');\n      store.setState('b');\n      expect(store.state).to.equal('ab');\n      store.replaceState('xyz');\n      expect(store.state).to.equal('xyz');\n      store.setState('zyx');\n      expect(store.state).to.equal('xyzzyx');\n    });\n  });\n\n  describe('#getStateAsObject()', () => {\n    it('returns the current state as an object', () => {\n      const store = new Store();\n      store.setState({ foo: 'bar', bar: 'baz' });\n      expect(store.getStateAsObject()).to.deep.equal({ foo: 'bar', bar: 'baz' });\n    });\n  });\n\n  describe('#forceUpdate()', () => {\n    it('emits change event', () => {\n      const store = new ExampleStore();\n      const listener = sinon.spy();\n      store.addListener('change', listener);\n\n      store.forceUpdate();\n\n      expect(listener.calledOnce).to.be.true;\n    });\n\n    it('doesn\\'t modify existing state', () => {\n      const store = new ExampleStore();\n      const listener = sinon.spy();\n      store.addListener('change', listener);\n\n      store.register(actionId, function() {\n        this.replaceState({ bar: 'baz' });\n        this.forceUpdate();\n\n        expect(this.state).to.deep.equal({ foo: 'bar' });\n        expect(listener.called).to.be.false;\n\n        this.setState({ foo: 'bar' });\n        this.forceUpdate();\n        this.replaceState({ baz: 'foo' });\n      });\n\n      // Simulate dispatch\n      store.handler({ actionId, body: 'foobar' });\n\n      expect(listener.calledOnce).to.be.true;\n      expect(store.state).to.deep.equal({ baz: 'foo' });\n    });\n  });\n\n});\n"]}
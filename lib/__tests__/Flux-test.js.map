{"version":3,"sources":["../../src/__tests__/Flux-test.js"],"names":[],"mappings":"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","file":"src/__tests__/Flux-test.js","sourcesContent":["import { Flux, Store, Actions } from '../Flux';\nimport sinon from 'sinon';\n\nfunction createSerializableStore(serializedState) {\n  return class SerializableStore extends Store {\n    static serialize() {\n      return serializedState;\n    }\n    static deserialize(stateString) {\n      return {\n        stateString,\n        deserialized: true,\n      };\n    }\n  };\n}\n\ndescribe('Flux', () => {\n\n  describe('#createStore()', () => {\n    it('throws if key already exists', () => {\n      const flux = new Flux();\n      class TestStore extends Store {}\n\n      flux.createStore('ExampleStore', TestStore);\n      expect(flux.createStore.bind(flux, 'ExampleStore', TestStore)).to.throw(\n        'You\\'ve attempted to create multiple stores with key ExampleStore. '\n      + 'Keys must be unique.'\n      );\n    });\n\n    it('throws if Store is not a prototype of class', () => {\n      const flux = new Flux();\n      class ForgotToExtendStore {}\n\n      expect(flux.createStore.bind(flux, 'Flux', ForgotToExtendStore)).to.throw(\n        'You\\'ve attempted to create a store from the class '\n      + 'ForgotToExtendStore, which does not have the base Store class in its '\n      + 'prototype chain. Make sure you\\'re using the `extends` keyword: '\n      + '`class ForgotToExtendStore extends Store { ... }`'\n      );\n    });\n\n    it('registers store\\'s handler with central dispatcher', () => {\n      class ExampleStore extends Store {}\n\n      const spy1 = sinon.spy();\n      const spy2 = sinon.spy();\n\n      ExampleStore.prototype.foo = 'bar';\n      ExampleStore.prototype.handler = function(_payload) {\n        spy1(_payload);\n        spy2(this.foo);\n      };\n\n      const flux = new Flux();\n      flux.createStore('ExampleStore', ExampleStore);\n\n      const payload = 'foobar';\n      flux.dispatch('actionId', payload);\n      expect(spy1.getCall(0).args[0].body).to.equal('foobar');\n      expect(spy2.calledWith('bar')).to.be.true;\n    });\n\n    it('returns the created store instance', () => {\n      class ExampleStore extends Store {}\n\n      const flux = new Flux();\n      const store = flux.createStore('ExampleStore', ExampleStore);\n      expect(store).to.be.an.instanceOf(ExampleStore);\n    });\n  });\n\n  describe('#getStore()', () => {\n    it('retrieves store for key', () => {\n      const flux = new Flux();\n      class TestStore extends Store {}\n\n      flux.createStore('ExampleStore', TestStore);\n      expect(flux.getStore('ExampleStore')).to.be.an.instanceOf(Store);\n      expect(flux.getStore('NonexistentStore')).to.be.undefined;\n    });\n  });\n\n  describe('#createActions()', () => {\n    it('throws if key already exists', () => {\n      class TestActions extends Actions {}\n\n      const flux = new Flux();\n      flux.createActions('ExampleActions', TestActions);\n\n      expect(flux.createActions.bind(flux, 'ExampleActions', Actions)).to.throw(\n        'You\\'ve attempted to create multiple actions with key ExampleActions. '\n      + 'Keys must be unique.'\n      );\n    });\n\n    it('throws if Actions is not a prototype of class', () => {\n      const flux = new Flux();\n      class ForgotToExtendActions {}\n\n      expect(flux.createActions.bind(flux, 'Flux', ForgotToExtendActions))\n        .to.throw(\n          'You\\'ve attempted to create actions from the class '\n        + 'ForgotToExtendActions, which does not have the base Actions class '\n        + 'in its prototype chain. Make sure you\\'re using the `extends` '\n        + 'keyword: `class ForgotToExtendActions extends Actions { ... }`'\n      );\n    });\n\n    it('returns the created action\\'s instance', () => {\n      class TestActions extends Actions {}\n\n      const flux = new Flux();\n      const actions = flux.createActions('TestActions', TestActions);\n      expect(actions).to.be.an.instanceOf(TestActions);\n    });\n  });\n\n  describe('#getActions()', () => {\n    class TestActions extends Actions {}\n\n    it('retrieves actions for key', () => {\n      const flux = new Flux();\n      flux.createActions('TestActions', TestActions);\n\n      expect(flux.getActions('TestActions')).to.be.an.instanceOf(Actions);\n      expect(flux.getActions('NonexistentActions')).to.be.undefined;\n    });\n\n  });\n\n  describe('#getActionIds() / #getConstants()', () => {\n    class TestActions extends Actions {\n      getFoo() {}\n    }\n\n    it('retrives ids of actions for key', () => {\n      const flux = new Flux();\n      flux.createActions('TestActions', TestActions);\n\n      expect(flux.getActionIds('TestActions').getFoo).to.be.a('string');\n      expect(flux.getActionIds('NonexistentActions')).to.be.undefined;\n\n      expect(flux.getConstants('TestActions').getFoo).to.be.a('string');\n      expect(flux.getConstants('NonexistentActions')).to.be.undefined;\n    });\n  });\n\n  describe('#getAllActionIds() / #getAllConstants()', () => {\n    class TestFooActions extends Actions {\n      getFoo() {}\n      getBar() {}\n    }\n\n    class TestBarActions extends Actions {\n      getFoo() {}\n      getBar() {}\n    }\n\n    it('retrives ids of all actions', () => {\n      let flux = new Flux();\n      flux.createActions('TestFooActions', TestFooActions);\n      flux.createActions('TestBarActions', TestBarActions);\n\n      expect(flux.getAllActionIds()).to.be.an('array');\n      expect(flux.getAllActionIds()[0]).to.be.a('string');\n      expect(flux.getAllActionIds()).to.have.length(4);\n\n      expect(flux.getAllConstants()).to.be.an('array');\n      expect(flux.getAllConstants()[0]).to.be.a('string');\n      expect(flux.getAllConstants()).to.have.length(4);\n    });\n  });\n\n  describe('#dispatch()', () => {\n\n    it('delegates to dispatcher', () => {\n      const flux = new Flux();\n      const dispatch = sinon.spy();\n      flux.dispatcher = { dispatch };\n      const actionId = 'actionId';\n\n      flux.dispatch(actionId, 'foobar');\n\n      expect(dispatch.firstCall.args[0]).to.deep.equal({\n        actionId,\n        body: 'foobar',\n      });\n    });\n\n    it('emits dispatch event', () => {\n      const flux = new Flux();\n      const listener = sinon.spy();\n\n      flux.addListener('dispatch', listener);\n\n      const actionId = 'actionId';\n\n      flux.dispatch(actionId, 'foobar');\n\n      expect(listener.calledOnce).to.be.true;\n      expect(listener.firstCall.args[0]).to.deep.equal({\n        actionId,\n        body: 'foobar'\n      });\n    });\n  });\n\n  describe('#dispatchAsync()', () => {\n\n    it('delegates to dispatcher', async function() {\n      const flux = new Flux();\n      const dispatch = sinon.spy();\n      flux.dispatcher = { dispatch };\n      const actionId = 'actionId';\n\n      await flux.dispatchAsync(actionId, Promise.resolve('foobar'));\n\n      expect(dispatch.callCount).to.equal(2);\n      expect(dispatch.firstCall.args[0]).to.deep.equal({\n        actionId,\n        async: 'begin',\n      });\n      expect(dispatch.secondCall.args[0]).to.deep.equal({\n        actionId,\n        body: 'foobar',\n        async: 'success'\n      });\n    });\n\n    it('emits dispatch event', async function() {\n      const flux = new Flux();\n      const listener = sinon.spy();\n\n      flux.addListener('dispatch', listener);\n\n      const actionId = 'actionId';\n\n      await flux.dispatchAsync(actionId, Promise.resolve('foobar'));\n\n      expect(listener.calledTwice).to.be.true;\n      expect(listener.firstCall.args[0]).to.deep.equal({\n        actionId,\n        async: 'begin',\n      });\n      expect(listener.secondCall.args[0]).to.deep.equal({\n        actionId,\n        async: 'success',\n        body: 'foobar',\n      });\n    });\n\n    it('resolves to value of given promise', done => {\n      const flux = new Flux();\n      const dispatch = sinon.spy();\n      flux.dispatcher = { dispatch };\n      const actionId = 'actionId';\n\n      expect(flux.dispatchAsync(actionId, Promise.resolve('foobar')))\n        .to.eventually.equal('foobar')\n        .notify(done);\n    });\n\n    it('rejects with error if promise rejects', done => {\n      const flux = new Flux();\n      const dispatch = sinon.spy();\n      flux.dispatcher = { dispatch };\n      const actionId = 'actionId';\n\n      expect(flux.dispatchAsync(actionId, Promise.reject(new Error('error'))))\n        .to.be.rejectedWith('error')\n        .notify(done);\n    });\n\n    it('dispatches with error if promise rejects', async function() {\n      const flux = new Flux();\n      const dispatch = sinon.spy();\n      flux.dispatcher = { dispatch };\n      const actionId = 'actionId';\n      const actionArgs = {};\n\n      const error = new Error('error');\n\n      await expect(flux.dispatchAsync(actionId, Promise.reject(error), actionArgs))\n        .to.be.rejected;\n\n      expect(dispatch.callCount).to.equal(2);\n      expect(dispatch.firstCall.args[0]).to.deep.equal({\n        actionId,\n        actionArgs,\n        async: 'begin',\n      });\n      expect(dispatch.secondCall.args[0]).to.deep.equal({\n        actionId,\n        error,\n        actionArgs,\n        async: 'failure'\n      });\n    });\n\n    it('emits error if promise rejects', async function() {\n      class ExampleStore extends Store {}\n\n      const flux = new Flux();\n      const listener = sinon.spy();\n      flux.addListener('error', listener);\n\n      const actionId = 'actionId';\n\n      await expect(flux.dispatchAsync(actionId, Promise.reject(new Error('foobar'))))\n        .to.be.rejectedWith('foobar');\n\n      expect(listener.calledOnce).to.be.true;\n      expect(listener.firstCall.args[0].message).to.equal('foobar');\n    });\n\n    it('emit errors that occur as result of dispatch', async function() {\n      class ExampleStore extends Store {}\n\n      const flux = new Flux();\n      const listener = sinon.spy();\n      flux.addListener('error', listener);\n\n      const actionId = 'actionId';\n      const store = flux.createStore('example', ExampleStore);\n\n      store.registerAsync(\n        actionId,\n        null,\n        () => {\n          throw new Error('success error');\n        },\n        () => {\n          throw new Error('failure error');\n        }\n      );\n\n      await expect(flux.dispatchAsync(actionId, Promise.resolve('foobar')))\n        .to.be.rejectedWith('success error');\n      expect(listener.calledOnce).to.be.true;\n      expect(listener.firstCall.args[0].message).to.equal('success error');\n\n      await expect(flux.dispatchAsync(actionId, Promise.reject(new Error('foobar'))))\n        .to.be.rejectedWith('failure error');\n      expect(listener.calledTwice).to.be.true;\n      expect(listener.secondCall.args[0].message).to.equal('failure error');\n    });\n\n  });\n\n  describe('#removeAllStoreListeners', () => {\n    it('removes all listeners from stores', () => {\n      class TestStore extends Store {}\n\n      const flux = new Flux();\n      const storeA = flux.createStore('storeA', TestStore);\n      const storeB = flux.createStore('storeB', TestStore);\n\n      const listener = function() {};\n\n      storeA.addListener('change', listener);\n      storeA.addListener('change', listener);\n      storeB.addListener('change', listener);\n      storeB.addListener('change', listener);\n\n      expect(storeA.listeners('change').length).to.equal(2);\n      expect(storeB.listeners('change').length).to.equal(2);\n\n      flux.removeAllStoreListeners();\n\n      expect(storeA.listeners('change').length).to.equal(0);\n      expect(storeB.listeners('change').length).to.equal(0);\n    });\n  });\n\n  describe('#serialize()', () => {\n\n    it('returns state of all the stores as a JSON string', () => {\n      const flux = new Flux();\n\n      flux.createStore('foo', createSerializableStore('foo state'));\n      flux.createStore('bar', createSerializableStore('bar state'));\n      flux.createStore('baz', createSerializableStore('baz state'));\n\n      expect(JSON.parse(flux.serialize())).to.deep.equal({\n        foo: 'foo state',\n        bar: 'bar state',\n        baz: 'baz state',\n      });\n    });\n\n    it('ignores stores whose classes do not implement .serialize()', () => {\n      const flux = new Flux();\n      class TestStore extends Store {}\n\n      flux.createStore('foo', createSerializableStore('foo state'));\n      flux.createStore('bar', createSerializableStore('bar state'));\n      flux.createStore('baz', TestStore);\n\n      expect(JSON.parse(flux.serialize())).to.deep.equal({\n        foo: 'foo state',\n        bar: 'bar state',\n      });\n    });\n\n    it('warns if any store classes .serialize() returns a non-string', () => {\n      const flux = new Flux();\n      const warn = sinon.spy(console, 'warn');\n\n      flux.createStore('foo', createSerializableStore({}));\n      flux.serialize();\n\n      expect(warn.firstCall.args[0]).to.equal(\n        'The store with key \\'foo\\' was not serialized because the static '\n      + 'method `SerializableStore.serialize()` returned a non-string with '\n      + 'type \\'object\\'.'\n      );\n\n      console.warn.restore();\n    });\n\n    it('warns and skips stores whose classes do not implement .deserialize()', () => {\n      const flux = new Flux();\n      const warn = sinon.spy(console, 'warn');\n\n      class TestStore extends Store {\n        static serialize() {\n          return 'state string';\n        }\n      }\n\n      flux.createStore('test', TestStore);\n      flux.serialize();\n\n      expect(warn.firstCall.args[0]).to.equal(\n        'The class `TestStore` has a `serialize()` method, but no '\n      + 'corresponding `deserialize()` method.'\n      );\n\n      console.warn.restore();\n    });\n  });\n\n  describe('#deserialize()', () => {\n\n    it('converts a serialized string into state and uses it to replace state of stores', () => {\n      const flux = new Flux();\n\n      flux.createStore('foo', createSerializableStore());\n      flux.createStore('bar', createSerializableStore());\n      flux.createStore('baz', createSerializableStore());\n\n      flux.deserialize(`{\n        \"foo\": \"foo state\",\n        \"bar\": \"bar state\",\n        \"baz\": \"baz state\"\n      }`);\n\n      const fooStore = flux.getStore('foo');\n      const barStore = flux.getStore('bar');\n      const bazStore = flux.getStore('baz');\n\n      expect(fooStore.state.stateString).to.equal('foo state');\n      expect(fooStore.state.deserialized).to.be.true;\n      expect(barStore.state.stateString).to.equal('bar state');\n      expect(barStore.state.deserialized).to.be.true;\n      expect(bazStore.state.stateString).to.equal('baz state');\n      expect(bazStore.state.deserialized).to.be.true;\n    });\n\n    it('warns and skips if passed string is invalid JSON', () => {\n      const flux = new Flux();\n      class TestStore extends Store {}\n\n\n      flux.createStore('foo', TestStore);\n\n      expect(flux.deserialize.bind(flux, 'not JSON')).to.throw(\n        'Invalid value passed to `Flux#deserialize()`: not JSON'\n      );\n    });\n\n    it('warns and skips stores whose classes do not implement .serialize()', () => {\n      const flux = new Flux();\n      const warn = sinon.spy(console, 'warn');\n\n      class TestStore extends Store {\n        static deserialize() {\n          return {};\n        }\n      }\n\n      flux.createStore('test', TestStore);\n      flux.deserialize('{\"test\": \"test state\"}');\n\n      expect(warn.firstCall.args[0]).to.equal(\n        'The class `TestStore` has a `deserialize()` method, but no '\n      + 'corresponding `serialize()` method.'\n      );\n\n      console.warn.restore();\n    });\n\n    it('ignores stores whose classes do not implement .deserialize()', () => {\n      const flux = new Flux();\n      class TestStore extends Store {}\n\n      flux.createStore('foo', createSerializableStore());\n      flux.createStore('bar', createSerializableStore());\n      flux.createStore('baz', TestStore);\n\n      flux.deserialize(`{\n        \"foo\": \"foo state\",\n        \"bar\": \"bar state\",\n        \"baz\": \"baz state\"\n      }`);\n\n      const fooStore = flux.getStore('foo');\n      const barStore = flux.getStore('bar');\n      const bazStore = flux.getStore('baz');\n\n      expect(fooStore.state.stateString).to.equal('foo state');\n      expect(fooStore.state.deserialized).to.be.true;\n      expect(barStore.state.stateString).to.equal('bar state');\n      expect(barStore.state.deserialized).to.be.true;\n      expect(bazStore.state).to.be.null;\n    });\n\n  });\n\n});\n"]}